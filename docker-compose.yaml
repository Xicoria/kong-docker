version: "3.7"

networks:
    custom_network:
        external:
            name: ${NETWORK_NAME}

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    restart: always
    ports:
    - 5432:5432
    networks:
    - custom_network
    volumes:
    - ./data-storage/postgres:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong:
    build:
      context: .
      dockerfile: docker/kong/Dockerfile
    command: >
      /bin/sh -c "kong migrations bootstrap
      && kong start"
    restart: on-failure
    environment:
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong

      ### Grant the kong can listen external connections
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_TRUSTED_IPS: "0.0.0.0/0,::/0"

      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stdout
    links:
    - kong-database
    depends_on:
    - kong-database
    ports:
    - "8000:8000"
    - "8001:8001"
    - "8443:8443"
    - "8444:8444"
    networks:
    - custom_network

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
      TOKEN_SECRET: uxhELE2Slti1V3saBuOvmChK7hlp02Qm
      NODE_ENV: development
    depends_on:
    - kong-database
    ports:
    - "1337:1337"
    networks:
    - custom_network
